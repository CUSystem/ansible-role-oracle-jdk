---

- name: download Java 
  get_url:
    url:     "{{ java_versions[java_version].java_download_url }}"
    headers: 'Cookie:oraclelicense=accept-securebackup-cookie'
    dest:    "{{ java_tar_file }}"
  when: "{{ java_download_from_oracle }}"

- name: ensure the install dir _is_
  file:
    path: "{{ java_install_dir }}"
    mode: 0755
    owner: root
    group: root
    state: directory

- name: check if the java_home exists
  stat: path="{{ java_real_home }}"
  register: java_real_home_check

- name: unarchive the tarball
  unarchive:
    src: "{{ java_tar_file }}"
    dest: "{{ java_install_dir }}"
    owner: root
    group: root
    copy: no
  when: not java_real_home_check.stat.isdir

- block:
  - name: set alternatives
    alternatives:
      name="{{ item.exe }}"
      link="/usr/bin/{{ item.exe }}"
      path="{{ item.path }}/{{ item.exe }}"
    with_items:
      - { path: "{{ java_real_home }}/jre/bin", exe: 'java' }
      - { path: "{{ java_real_home }}/jre/bin", exe: 'keytool' }
      - { path: "{{ java_real_home }}/bin", exe: 'javac' }
      - { path: "{{ java_real_home }}/bin", exe: 'javadoc' }
  - name: set default
    file:
      path: "/usr/java/default"
      src: "{{ java_real_home }}"
      state: link 
      force: yes

  when: "{{ java_set_as_default }}"
#end block

- name: set default
  file:
    path: "/usr/java/latest"
    src: "{{ java_real_home }}"
    state: link 
    force: yes
  when: "{{ java_set_as_latest }}"

- name: Configure Java to use /dev/urandom.
  lineinfile:
    dest="{{ java_real_home }}/jre/lib/security/java.security"
    regexp="^securerandom.source="
    line="securerandom.source=file:/dev/./urandom"
  when: "{{ java_entropy_fix }}"

- name: install crypto
  include: java-crypto.yml
  when: "{{ java_install_jce }}"

- name: clean up
  file:
    path: "{{ java_download_path }}/{{ item }}"
    state: absent
  with_items:
    - "jdk-{{ java_version }}-linux-x64.tar.gz"
  when: "{{ java_remove_download }}"
